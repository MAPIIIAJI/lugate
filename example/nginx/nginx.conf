user www;

worker_processes  auto;

error_log  /var/log/nginx/error.log;

pid        /var/log/nginx/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    access_log  /var/log/nginx/access.log;

    #sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # gateway
    server {
        listen       80;
        server_name  gateway.lugate.loc;

        access_log  /var/log/nginx/gateway_access.log;
        error_log  /var/log/nginx/gateway_error.log;

        location / {
              # MIME type determined by default_type:
              default_type 'application/json';

              content_by_lua_block {
                -- POST request
                if 'POST' == ngx.req.get_method() then
                  -- Load lugate module
                  local Lugate = require "lugate"

                  -- Get request body
                  ngx.req.read_body() -- explicitly read the req body
                  local body = ngx.req.get_body_data()
                  ngx.print(data)
                  -- Get new lugate instance
                  local lugate = Lugate:new({
                    body = body,
                    routes = {
                      ["^v1%..+"] = "http://service01.lugate.loc",
                      ["^v2%..+"] = "http://service02.lugate.loc",
                    }
                  })
                  -- Loop requests
                  for _, request in ipairs(lugate:get_requests()) do
                    ngx.say(request:get_body())
                  end

                  ngx.say(#lugate:get_requests())
                  ngx.say(body)
                  ngx.say(type(lugate:get_requests()))

                  return

                else
                  ngx.say('{"jsonrpc":"2.0","error":{"code":-32601,"message":"Only POST requests are allowed","data":[]},"id":null}')
                  return
                end
              }
        }
    }

    # service01
    server {
        listen       80;
        server_name  service01.lugate.loc;

        access_log  /var/log/nginx/service01_access.log;
        error_log  /var/log/nginx/service01_error.log;

        location / {
              # MIME type determined by default_type:
              default_type 'application/json';

              content_by_lua_block {
                 ngx.say('Lugate service01!')
              }
        }
    }

    # service02
    server {
        listen       80;
        server_name  service02.lugate.loc;

        access_log  /var/log/nginx/service02_access.log;
        error_log  /var/log/nginx/service02_error.log;

        location / {
              # MIME type determined by default_type:
              default_type 'application/json';

              content_by_lua_block {
                 ngx.say('Lugate service02!')
              }
        }
    }


    # service03
    server {
        listen       80;
        server_name  service03.lugate.loc;

        access_log  /var/log/nginx/service03_access.log;
        error_log  /var/log/nginx/service03_error.log;

        location / {
              # MIME type determined by default_type:
              default_type 'application/json';

              content_by_lua_block {
                 ngx.say('Lugate service03!')
              }
        }
    }

}
